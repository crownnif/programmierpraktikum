#BlueJ class context
comment0.target=ArrayTitelListenTest
comment0.text=\n\ JUnit-Test\ fuer\ die\ Klasse\ LinkedTitelListe.\n\ \n\ @author\ Till\ Aust,\ Axel\ Schmolitzky,\ Petra\ Becker-Pechau\n\ @version\ 2021\n
comment1.params=
comment1.target=ArrayTitelListenTest()
comment10.params=
comment10.target=void\ testeFuegeEinNegativtest()
comment10.text=\n\ Testet\ die\ Methode\ fuegeEin(String,\ int)\ der\ Liste.\ Dabei\ wird\ getestet,\n\ ob\ sich\ die\ Liste\ richtig\ verhaelt,\ wenn\ man\ versucht\ ein\ Element\ an\n\ ungueltigen\ Indizes\ einzufuegen.\n
comment11.params=
comment11.target=void\ testeEntferneMittig()
comment11.text=\n\ Testet\ die\ Methode\ entferne(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ Elemente\ mittig\ aus\ der\ Liste\ entfernen\ lassen.\n
comment12.params=
comment12.target=void\ testeEntferneListenanfang()
comment12.text=\n\ Testet\ die\ Methode\ entferne(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ Elemente\ am\ Anfang\ aus\ der\ Liste\ entfernen\ lassen.\n
comment13.params=
comment13.target=void\ testeEntferneListenende()
comment13.text=\n\ Testet\ die\ Methode\ entferne(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ Elemente\ am\ Ende\ aus\ der\ Liste\ entfernen\ lassen.\n
comment14.params=
comment14.target=void\ testeLoeschenAusGrosserListe()
comment14.text=\n\ Testet,\ ob\ sich\ Elemente\ aus\ einer\ Liste\ loeschen\ lassen,\ die\ mehr\ als\ 10\n\ Elemente\ enthaelt.\n
comment15.params=
comment15.target=void\ testeEntferneNegativtest()
comment15.text=\n\ Testet\ die\ Methode\ entferne(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ die\ Liste\ richtig\ verhaelt,\ wenn\ man\ versucht\ ein\ Element\ an\ ungueltigen\n\ Indizes\ zu\ entfernen.\n
comment16.params=
comment16.target=void\ testeGibMittig()
comment16.text=\n\ Testet\ die\ Methode\ gibTitel(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ Elemente\ mittig\ in\ der\ Liste\ abfragen\ lassen.\n
comment17.params=
comment17.target=void\ testeGibListenanfang()
comment17.text=\n\ Testet\ die\ Methode\ gibTitel(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ Elemente\ am\ Anfang\ in\ der\ Liste\ abfragen\ lassen.\n
comment18.params=
comment18.target=void\ testeGibListenende()
comment18.text=\n\ Testet\ die\ Methode\ gibTitel(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ Elemente\ am\ Ende\ in\ der\ Liste\ abfragen\ lassen.\n
comment19.params=
comment19.target=void\ testeGibNegativtest()
comment19.text=\n\ Testet\ die\ Methode\ gibTitel(int)\ der\ Liste.\ Dabei\ wird\ getestet,\ ob\ sich\n\ die\ Liste\ richtig\ verhaelt,\ wenn\ man\ versucht\ ein\ Element\ an\ ungueltigen\n\ Indizes\ abzufragen.\n
comment2.params=
comment2.target=void\ testeEnthaelt()
comment2.text=\n\ Testet\ die\ Methode\ enthaelt(String)\ der\ Liste.\n
comment20.params=
comment20.target=void\ testeLeere()
comment20.text=\n\ Testet\ die\ Methode\ leere\ der\ Liste.\n
comment21.params=
comment21.target=void\ testeVergroessern()
comment21.text=\n\ Testet\ das\ Vergroessern\ der\ Liste\ waehrend\ des\ Einfuegens\ vieler\n\ Elemente.\n
comment22.params=
comment22.target=TitelListe\ erzeugeListe()
comment22.text=\n\ Erzeugt\ eine\ neue\ TitelListe.\n\ \n\ @return\ Eine\ leere\ Liste.\n
comment3.params=
comment3.target=void\ testetEqualsVerwendungInEnthaelt()
comment3.text=\n\ Testet,\ ob\ zwei\ Titel\ in\ der\ Methode\ enthaelt(String)\ mit\ equals\ verglichen\ \n\ werden.\ \n
comment4.params=
comment4.target=void\ testeGibLaenge()
comment4.text=\n\ Testet\ die\ Methode\ gibLaenge\ der\ Liste.\n
comment5.params=
comment5.target=void\ testeFuegeEinMittig()
comment5.text=\n\ Testet\ die\ Methode\ fuegeEin(Titel,\ int)\ der\ Liste.\ Dabei\ wird\ getestet,\n\ ob\ sich\ Elemente\ mittig\ in\ die\ Liste\ einfuegen\ lassen.\n
comment6.params=
comment6.target=void\ testeFuegeEinListenanfang()
comment6.text=\n\ Testet\ die\ Methode\ fuegeEin(Titel,\ int)\ der\ Liste.\ Dabei\ wird\ getestet,\n\ ob\ sich\ Elemente\ am\ Anfang\ in\ die\ Liste\ einfuegen\ lassen.\n
comment7.params=
comment7.target=void\ testeFuegeEinListenende()
comment7.text=\n\ Testet\ die\ Methode\ fuegeEin(String,\ int)\ der\ Liste.\ Dabei\ wird\ getestet,\n\ ob\ sich\ Elemente\ am\ Ende\ in\ die\ Liste\ einfuegen\ lassen.\n
comment8.params=
comment8.target=void\ testeEinfuegenUndEntfernen()
comment8.text=\n\ Testet,\ ob\ beim\ Einfuegen\ am\ Anfang\ korrekt\ verschoben\ wird.\n
comment9.params=
comment9.target=void\ testeFuegeEinVergroessern()
comment9.text=\n\ Testet\ das\ Vergroessern\ der\ Liste\ waehrend\ des\ Einfuegens\ vieler\n\ Elemente.\n
numComments=23
